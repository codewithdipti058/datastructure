/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/
#include <stdio.h>
#include <stdlib.h>

#define MAX 5  


struct CircularQueue {
    int front, rear;
    int items[MAX];
};


void initializeQueue(struct CircularQueue* q) {
    q->front = -1;
    q->rear = -1;
}

/
int isFull(struct CircularQueue* q) {
    return (q->rear + 1) % MAX == q->front;
}

int isEmpty(struct CircularQueue* q) {
    return q->front == -1;
}


void enqueue(struct CircularQueue* q, int value) {
    if (isFull(q)) {
        printf("Queue is full. Cannot enqueue %d\n", value);
        return;
    }

    if (q->front == -1) {
        q->front = 0; 
    }
    q->rear = (q->rear + 1) % MAX;
    q->items[q->rear] = value;
    printf("%d added to the queue\n", value);
}


void dequeue(struct CircularQueue* q) {
    if (isEmpty(q)) {
        printf("Queue is empty. Cannot dequeue\n");
        return;
    }

    int dequeuedValue = q->items[q->front];
    if (q->front == q->rear) {
        q->front = q->rear = -1;  
    } else {
        q->front = (q->front + 1) % MAX;
    }

    printf("%d removed from the queue\n", dequeuedValue);
}


void printQueue(struct CircularQueue* q) {
    if (isEmpty(q)) {
        printf("Queue is empty.\n");
        return;
    }

    printf("Queue elements: ");
    int i = q->front;
    while (i != q->rear) {
        printf("%d ", q->items[i]);
        i = (i + 1) % MAX;
    }
    printf("%d\n", q->items[q->rear]);
}


int main() {
    struct CircularQueue queue;
    initializeQueue(&queue);

    int choice, value;

    while (1) {
        
        printf("\n1. Add\n2. Delete\n3. Print\n4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:  
                printf("Enter a value to add: ");
                scanf("%d", &value);
                enqueue(&queue, value);
                break;

            case 2:  
                dequeue(&queue);
                break;

            case 3: 
                printQueue(&queue);
                break;

            case 4:  
                printf("Exiting...\n");
                exit(0);

            default:
                printf("Invalid choice! Please try again.\n");
        }
    }

    return 0;
}
